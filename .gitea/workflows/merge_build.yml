name: app Build

on:
  push:
    branches:  
      - '**'   ### this is done to prevent config runs when tagging

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [ opened ]

jobs:
  android_apk_build:
    name: Android APK Build
    runs-on: workstation.ubuntu.lts
    container:
      image: gitea.cyber-mint.com/pumppay/pp-flutter:v3.27.3
    env:
      RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
      RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
      RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
      RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
      BASE64_KEYSTORE: ${{ secrets.BASE64_KEYSTORE }}
      GITEA_USERNAME: ${{ secrets.USERNAME }}
      GITEA_PASSWORD: ${{ secrets.PASSWORD }}
      GITEA_SERVER: ${{ secrets.SERVER }}
      MAP_API_KEY: ${{ secrets.MAP_API_KEY }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      # - name: Decode Android Key Store
      #   run: |
      #     echo $BASE64_KEYSTORE | base64 -d | tee android/app/keystore > /dev/null
      
      # - name: Create key.properties
      #   run: |
      #     printf 'keyAlias=%s\nkeyPassword=%s\nstoreFile=%s\nstorePassword=%s' \
      #       $RELEASE_KEY_ALIAS $RELEASE_KEY_PASSWORD $RELEASE_KEYSTORE $RELEASE_STORE_PASSWORD > android/key.properties
      
      - name: Verify Flutter Installation
        run: flutter doctor -v

      - name: Get Project Dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --dart-define-from-file=.env --debug

      - name: Create zip file with correct timestamps
        run: |
          cd build/app/outputs/flutter-apk
          zip -r artifact.zip app-debug.apk

      - name: Store Test Results
        uses: actions/upload-artifact@v3
        with:
          name: qa-zarply
          path: build/app/outputs/flutter-apk/artifact.zip

  ios_build:
    name: iOS IPA Build & Upload
    runs-on: workstation.mac
    env:
      FASTLANE_APPLE_API_KEY_ID: ${{ secrets.FASTLANE_APPLE_API_KEY_ID }}
      FASTLANE_APPLE_ISSUER_ID: ${{ secrets.FASTLANE_APPLE_ISSUER_ID }}
      FASTLANE_APPLE_API_KEY_PATH: ${{ secrets.FASTLANE_APPLE_API_KEY_PATH }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Verify Flutter Installation
        run: flutter doctor -v
      - name: Get Project Dependencies
        run: flutter pub get --no-precompile
      - name: Get iOS Dependencies
        run: |
          cd ios
          pod install --repo-update
          cd ..
      # - name: Generate Dart Files
      #   run: |
      #     flutter pub run build_runner build --release \
      #       --delete-conflicting-outputs \
      #       --config prod
      # - name: Generate Launcher Icons
      #   run: dart run flutter_launcher_icons
      - name: Build iOS IPA
        run: |
          flutter build ipa --release \
            --no-pub \
            --obfuscate \
            --codesign \
            --split-debug-info=split_debug_info/ \
            --dart-define-from-file=.env.prod
      # - name: Upload to TestFlight
      #   run: |
      #     cd ios
      #     fastlane beta
