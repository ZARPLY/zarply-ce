// Mocks generated by Mockito 5.4.6 from annotations
// in zarply/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:solana/dto.dart' as _i3;
import 'package:solana/solana.dart' as _i2;
import 'package:zarply/features/wallet/data/services/wallet_solana_service.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEd25519HDKeyPair_0 extends _i1.SmartFake
    implements _i2.Ed25519HDKeyPair {
  _FakeEd25519HDKeyPair_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProgramAccount_1 extends _i1.SmartFake
    implements _i3.ProgramAccount {
  _FakeProgramAccount_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransaction_2 extends _i1.SmartFake implements _i3.Transaction {
  _FakeTransaction_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WalletSolanaService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletSolanaService extends _i1.Mock
    implements _i4.WalletSolanaService {
  MockWalletSolanaService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Ed25519HDKeyPair> createWallet() => (super.noSuchMethod(
        Invocation.method(
          #createWallet,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Ed25519HDKeyPair>.value(_FakeEd25519HDKeyPair_0(
          this,
          Invocation.method(
            #createWallet,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Ed25519HDKeyPair>);

  @override
  _i5.Future<_i2.Ed25519HDKeyPair> createWalletFromMnemonic(String? mnemonic) =>
      (super.noSuchMethod(
        Invocation.method(
          #createWalletFromMnemonic,
          [mnemonic],
        ),
        returnValue:
            _i5.Future<_i2.Ed25519HDKeyPair>.value(_FakeEd25519HDKeyPair_0(
          this,
          Invocation.method(
            #createWalletFromMnemonic,
            [mnemonic],
          ),
        )),
      ) as _i5.Future<_i2.Ed25519HDKeyPair>);

  @override
  _i5.Future<_i3.ProgramAccount> createAssociatedTokenAccount(
          _i2.Ed25519HDKeyPair? wallet) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAssociatedTokenAccount,
          [wallet],
        ),
        returnValue: _i5.Future<_i3.ProgramAccount>.value(_FakeProgramAccount_1(
          this,
          Invocation.method(
            #createAssociatedTokenAccount,
            [wallet],
          ),
        )),
      ) as _i5.Future<_i3.ProgramAccount>);

  @override
  _i5.Future<_i3.ProgramAccount?> getAssociatedTokenAccount(
          String? walletAddress) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAssociatedTokenAccount,
          [walletAddress],
        ),
        returnValue: _i5.Future<_i3.ProgramAccount?>.value(),
      ) as _i5.Future<_i3.ProgramAccount?>);

  @override
  _i5.Future<_i2.Ed25519HDKeyPair> restoreWalletFromMnemonic(
          String? mnemonic) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreWalletFromMnemonic,
          [mnemonic],
        ),
        returnValue:
            _i5.Future<_i2.Ed25519HDKeyPair>.value(_FakeEd25519HDKeyPair_0(
          this,
          Invocation.method(
            #restoreWalletFromMnemonic,
            [mnemonic],
          ),
        )),
      ) as _i5.Future<_i2.Ed25519HDKeyPair>);

  @override
  _i5.Future<_i2.Ed25519HDKeyPair> restoreWalletFromPrivateKey(
          String? privateKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #restoreWalletFromPrivateKey,
          [privateKey],
        ),
        returnValue:
            _i5.Future<_i2.Ed25519HDKeyPair>.value(_FakeEd25519HDKeyPair_0(
          this,
          Invocation.method(
            #restoreWalletFromPrivateKey,
            [privateKey],
          ),
        )),
      ) as _i5.Future<_i2.Ed25519HDKeyPair>);

  @override
  _i5.Future<double> getSolBalance(String? publicKey) => (super.noSuchMethod(
        Invocation.method(
          #getSolBalance,
          [publicKey],
        ),
        returnValue: _i5.Future<double>.value(0.0),
      ) as _i5.Future<double>);

  @override
  _i5.Future<String> sendTransaction({
    required _i2.Ed25519HDKeyPair? senderWallet,
    required _i3.ProgramAccount? senderTokenAccount,
    required _i3.ProgramAccount? recipientTokenAccount,
    required double? zarpAmount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendTransaction,
          [],
          {
            #senderWallet: senderWallet,
            #senderTokenAccount: senderTokenAccount,
            #recipientTokenAccount: recipientTokenAccount,
            #zarpAmount: zarpAmount,
          },
        ),
        returnValue: _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #sendTransaction,
            [],
            {
              #senderWallet: senderWallet,
              #senderTokenAccount: senderTokenAccount,
              #recipientTokenAccount: recipientTokenAccount,
              #zarpAmount: zarpAmount,
            },
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<double> getZarpBalance(String? publicKey) => (super.noSuchMethod(
        Invocation.method(
          #getZarpBalance,
          [publicKey],
        ),
        returnValue: _i5.Future<double>.value(0.0),
      ) as _i5.Future<double>);

  @override
  _i5.Future<Map<String, List<_i3.TransactionDetails?>>>
      getAccountTransactions({
    required String? walletAddress,
    int? limit = 100,
    String? until,
    String? before,
    dynamic Function(List<_i3.TransactionDetails?>)? onBatchLoaded,
    bool Function()? isCancelled,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getAccountTransactions,
              [],
              {
                #walletAddress: walletAddress,
                #limit: limit,
                #until: until,
                #before: before,
                #onBatchLoaded: onBatchLoaded,
                #isCancelled: isCancelled,
              },
            ),
            returnValue:
                _i5.Future<Map<String, List<_i3.TransactionDetails?>>>.value(
                    <String, List<_i3.TransactionDetails?>>{}),
          ) as _i5.Future<Map<String, List<_i3.TransactionDetails?>>>);

  @override
  _i5.Future<String> requestZARP(_i2.Ed25519HDKeyPair? wallet) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestZARP,
          [wallet],
        ),
        returnValue: _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #requestZARP,
            [wallet],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<_i3.TransactionDetails?> getTransactionDetails(
          String? signature) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionDetails,
          [signature],
        ),
        returnValue: _i5.Future<_i3.TransactionDetails?>.value(),
      ) as _i5.Future<_i3.TransactionDetails?>);

  @override
  _i5.Future<int> getTransactionCount(String? address) => (super.noSuchMethod(
        Invocation.method(
          #getTransactionCount,
          [address],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  bool isValidMnemonic(String? mnemonic) => (super.noSuchMethod(
        Invocation.method(
          #isValidMnemonic,
          [mnemonic],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isValidPrivateKey(String? privateKey) => (super.noSuchMethod(
        Invocation.method(
          #isValidPrivateKey,
          [privateKey],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [TransactionDetails].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransactionDetails extends _i1.Mock
    implements _i3.TransactionDetails {
  MockTransactionDetails() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get slot => (super.noSuchMethod(
        Invocation.getter(#slot),
        returnValue: 0,
      ) as int);

  @override
  _i3.Transaction get transaction => (super.noSuchMethod(
        Invocation.getter(#transaction),
        returnValue: _FakeTransaction_2(
          this,
          Invocation.getter(#transaction),
        ),
      ) as _i3.Transaction);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
